# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.
exec --no-startup-id mako
exec --no-startup-id autotiling
exec --no-startup-id wl-paste --watch cliphist store

#bikin cursor ngilang ngab
seat seat0 hide_cursor 3000

#exec --no-startup-id swaybg -i meguru.jpg -m fill
gaps inner 10
gaps outer 5
default_border pixel 2
smart_borders on 
smart_gaps on
hide_edge_borders --i3 smart

#brightness desuwa
bindsym XF86MonBrightnessUp exec brightnessctl s 10+ exec zsh ~/.config/hypr/brightness.sh up
bindsym XF86MonBrightnessDown exec brightnessctl s 10- exec zsh ~/.config/hypr/brightness.sh down

#volume desuwa
bindsym --to-code XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +2% #increase sound volume exec --no-startup-id ~/.config/sway/scripts/volume.sh vol up
bindsym --to-code XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -2% #decrease sound volume exec --no-startup-id ~/.config/sway/scripts/volume.sh vol down
# bindsym --to-code XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle notify-send "Muted" # mute sound
bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle notify-send "Muted" 
bindsym --to-code XF86AudioPlay exec playerctl play-pause
bindsym --to-code XF86AudioPause exec playerctl play-pause
bindsym --to-code XF86AudioNext exec playerctl next
bindsym --to-code XF86AudioPrev exec playerctl previous

#for windows desuwa
for_window [class="pavucontrol"] floating enable
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="dialog"] floating enable
for_window [window_type="dialog"] floating enable
### Variables
#
# Logo key. Use Mod1 for Alt.

#clipboard desuwa
set $clipboard cliphist list | $dmenu --no-exec -p "copy" | cliphist decode | wl-copy
set $clipboard-del cliphist list | $dmenu --no-exec -p "delete" | cliphist delete && pkill -RTMIN+9 waybar
set $clipboard-del-all "rm -f ~/.cache/cliphist/db; pkill -RTMIN+9 waybar


set $mod Mod4
bindsym --to-code Print exec grim ~/Pictures/screenshots/screenshot-"$(date +%s)".png && notify-send "Screenshot of whole screen saved to folder"
bindsym --release shift+Print exec --no-startup-id grim -g "$(slurp)" - | swappy -f -
bindsym --release ctrl+Print exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -r '.. | select(.pid? and .visible?) | .rect | "\(.x),\(.y) \(.width)x\(.height)"' | slurp)" - | swappy -f -
bindsym --release $mod+p exec $clipboard
# Home row direction keys, like vim
set $left j
set $down k
set $up i
set $right l
# Your preferred terminal emulator
set $term foot
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu dmenu_path | dmenu | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /home/shigure/.config/sway/meguru.jpg fill
output * bg /home/shigure/wollpeper/hearts.png fill
# output * bg /home/shigure/.config/sway/seko.jpg fill
# output * bg /home/shigure/.config/sway/telanjang.png fill
# output * bg /home/shigure/.config/sway/catpussy.png fill
#output * bg #ff0000 solid_color
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Input configuration
#
# Example configuration:
#
#   input "2:14:SynPS/2_Synaptics_TouchPad" {
#       dwt enabled
#       tap enabled
#       natural_scroll enabled
#       middle_emulation enabled
#   }
#
# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+m exec neovide --multigrid
    bindsym $mod+o exec firefox
    bindsym $mod+n exec thunar

    # Kill focused window
    bindsym $mod+q kill
    #bindsym $mod+Shift+p exec shutdown -h now

    # Start your launcher
    bindsym $mod+d exec wofi --show drun
 
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+shift+y reload

    # Exit sway (logs you out of your Wayland session)
    #bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    set $mode_system System (l) lock, (e) exit, (s) Shutdown, (r) reboot, (Shift+s) Suspen
    mode "$mode_system" {
        bindsym l exec $locker, mode "default"
        bindsym e exec swaymsg exit, mode "default"
        bindsym Shift+s exec $locker && systemctl suspend, mode "default"
        bindsym r exec systemctl reboot, mode "default"
        bindsym s exec systemctl poweroff -i, mode "default"

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
    }

    bindsym $mod+Shift+e mode "$mode_system"
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+z workspace number 1
    bindsym $mod+x workspace number 2
    bindsym $mod+c workspace number 3
    bindsym $mod+v workspace number 4
    bindsym $mod+b workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+z move container to workspace number 1
    bindsym $mod+Shift+x move container to workspace number 2
    bindsym $mod+Shift+c move container to workspace number 3
    bindsym $mod+Shift+v move container to workspace number 4
    bindsym $mod+Shift+b move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+alt+u splith
    bindsym $mod+alt+y splitv

    # Switch the current container between different layout styles
    #bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+s move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+s scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
bar {
  swaybar_command waybar
}
client.focused          #363a4f #5C8286 #181926 #2e9ef4   #8fbcbb
client.focused_inactive #1e2030 #5f676a #181926 #484e50   #5f676a
client.unfocused        #24273a #222222 #888888 #333845   #333845
client.urgent           #2f343a #ed8796 #181926 #ee99a0   #ee99a0
client.placeholder      #000000 #0c0c0c #181926 #000000   #333845
client.background       #181926
# Read `man 5 sway-bar` for more information about this section.k

include /etc/sway/config.d/*
